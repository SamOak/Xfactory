spring.application.name=Xfactory

spring.main.banner-mode=console
spring.banner.charset=UTF-8
spring.banner.location=banner.txt

management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true

spring.devtools.restart.exclude=static/**,web/**

#################################################
# Xfactory
#################################################

xfactory.version=@version@

#
# h2 database
#
spring.h2.console.enabled=true
spring.h2.console.path=/h2console


spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.initialization-mode=always
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:xfactory
spring.datasource.username=sa
spring.datasource.password=

#
# ZK
# 
zk.homepage=index
zk.springboot-packaging=jar
zk.zul-view-resolver-enabled=true
zk.zul-view-resolver-prefix=/zul
zk.zul-view-resolver-suffix=.zul
zk.richlet-filter-mapping=/richlet/*
zk.update-uri=/zkau

#
# Application
#
xfactory.local.datetime.format=dd.MM.yyyy HH:mm:ss

# Basepath - place where we process the files... 
xfactory.path.basepath=./Xfactory

# conf directory ... where all xlst files are in
xfactory.path.lib=lib

#
# area subdirectories - all are subdirectories of xfactory.path.basepath
#
# all new files stored here - in subdirectories. 
xfactory.path.area.in=in
# after processing the files in the in-area we move the org files to done
xfactory.path.area.done=done
# in case of an error we move the org file to this directory
xfactory.path.area.error=error
# after successful processing the result files are stored here
xfactory.path.area.out=out


# regexpr to pick up files for processing
xfactory.filter.process.regex=.*\.xml$
# status extension for finisched files
xfactory.filter.done.regex=.*\.done$
# status extension for error files
xfactory.filter.job.regex=.*\.job$



# sleep between check for new files in 'in'-area (milliseconds)
xfactory.pickup.sleep=5000
# Wait after startup before start working (milliseconds)
xfactory.pickup.startup.delay=10000


xfactory.cleaner.movetodone.sleep=5000
xfactory.cleaner.deletedone.sleep=60000

# If a job files is older (in milliseconds) than this value the job is probably not running any more and 
# we remove the job file to rerun. Set this value to -1 switch of this feature.
xfactory.cleaner.job.maxdelay=600000

# should be the number of file which you catch in one search
xfactory.thread.queuesize=500
# number of 'parallel' threads to transform the xml
xfactory.thread.poolsize=500